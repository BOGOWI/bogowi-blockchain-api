BOGORewardDistributor Contract Documentation
===========================================

CONTRACT: BOGORewardDistributor.sol
VERSION: Solidity ^0.8.20
SECURITY: Pausable, ReentrancyGuard, MultisigTreasury-controlled

PURPOSE:
--------
Manages the distribution of BOGO token rewards to users based on various activities and engagement levels within the BOGOWI ecosystem.

KEY FEATURES:
-------------
1. Template-based reward system
2. Daily global distribution limits
3. Referral tracking system
4. Whitelist functionality for special rewards
5. Backend authorization for custom rewards
6. Emergency pause/unpause capabilities

IMMUTABLE VARIABLES:
--------------------
- bogoToken: IERC20 - The BOGO token contract address
- treasury: address - MultisigTreasury contract address for admin control

CONSTANTS:
----------
- DAILY_GLOBAL_LIMIT: 500,000 BOGO tokens (500000 * 10^18 wei)

STATE VARIABLES:
----------------
- templates: mapping(string => RewardTemplate) - Stores all reward templates
- lastClaim: mapping(address => mapping(string => uint256)) - Tracks last claim timestamp per wallet/template
- claimCount: mapping(address => mapping(string => uint256)) - Tracks claim count per wallet/template
- founderWhitelist: mapping(address => bool) - Special whitelist for founder rewards
- authorizedBackends: mapping(address => bool) - Authorized backend addresses for custom rewards
- referredBy: mapping(address => address) - Tracks referral relationships
- referralCount: mapping(address => uint256) - Number of successful referrals per address
- dailyDistributed: uint256 - Tracks daily distribution amount
- lastResetTime: uint256 - Timestamp of last daily limit reset

PRE-CONFIGURED REWARD TEMPLATES:
--------------------------------
1. welcome_bonus: 10 BOGO, one-time claim, no whitelist required *
2. founder_bonus: 100 BOGO, one-time claim, whitelist required **
3. referral_bonus: 20 BOGO per referral, unlimited claims, no whitelist
4. first_nft_mint: 25 BOGO, one-time claim, no whitelist
5. dao_participation: 15 BOGO, 30-day cooldown, unlimited claims
6. attraction_tier_1: 10 BOGO, unlimited claims *
7. attraction_tier_2: 20 BOGO, unlimited claims
8. attraction_tier_3: 40 BOGO, unlimited claims
9. attraction_tier_4: 50 BOGO, unlimited claims
10. custom_reward: 0-1000 BOGO, variable amount, backend-authorized only

PUBLIC FUNCTIONS:
-----------------

1. claimReward(string templateId)
   - Purpose: Claim fixed rewards based on template
   - Restrictions:
     * Contract must not be paused
     * Template must be active
     * Must meet template-specific requirements (whitelist, cooldown, max claims)
     * Daily global limit must not be exceeded
   - Access: Public (any wallet)

2. claimCustomReward(address recipient, uint256 amount, string reason)
   - Purpose: Distribute custom reward amounts
   - Restrictions:
     * Only authorized backend addresses
     * Amount must be > 0 and <= 1000 BOGO
     * Daily global limit must not be exceeded
     * Contract must not be paused
   - Access: Authorized backends only

3. claimReferralBonus(address referrer)
   - Purpose: Claim referral bonus for the referrer
   - Restrictions:
     * Caller must not have been referred before
     * Cannot self-refer
     * Valid referrer address required
     * Daily global limit must not be exceeded
     * Contract must not be paused
   - Access: Public (any wallet)

ADMIN FUNCTIONS (Treasury-only):
--------------------------------

1. addToWhitelist(address[] wallets)
   - Purpose: Add multiple addresses to founder whitelist
   - Access: Treasury multisig only

2. removeFromWhitelist(address wallet)
   - Purpose: Remove address from founder whitelist
   - Access: Treasury multisig only

3. setAuthorizedBackend(address backend, bool authorized)
   - Purpose: Add/remove authorized backend addresses
   - Access: Treasury multisig only

4. updateTemplate(string templateId, RewardTemplate newTemplate)
   - Purpose: Modify or add new reward templates
   - Access: Treasury multisig only

5. pause()
   - Purpose: Emergency pause all reward distributions
   - Access: Treasury multisig only

6. unpause()
   - Purpose: Resume reward distributions
   - Access: Treasury multisig only

7. treasurySweep(address token, address to, uint256 amount)
   - Purpose: Sweep tokens for contract migration/upgrades
   - Restrictions:
     * Valid recipient address required
     * Amount must be > 0
   - Access: Treasury multisig only

VIEW FUNCTIONS:
---------------

1. canClaim(address wallet, string templateId) returns (bool, string)
   - Purpose: Check if wallet is eligible to claim specific reward
   - Returns: (eligibility status, reason if not eligible)

2. getRemainingDailyLimit() returns (uint256)
   - Purpose: Check remaining daily distribution capacity
   - Returns: Amount of BOGO tokens remaining for the day

SECURITY FEATURES:
------------------
1. ReentrancyGuard: Prevents reentrancy attacks on all state-changing functions
2. Pausable: Emergency pause mechanism for all distributions
3. MultisigTreasury Control: All admin functions require multisig approval
4. Daily Limits: Prevents excessive token distribution
5. Input Validation: All functions validate parameters
6. No Single Owner: Treasury-based control prevents single point of failure

EVENTS:
-------
1. RewardClaimed(address indexed wallet, string templateId, uint256 amount)
2. ReferralClaimed(address indexed referrer, address indexed referred, uint256 amount)
3. TemplateUpdated(string templateId)
4. WhitelistUpdated(address indexed wallet, bool status)
5. TreasurySweep(address indexed token, address indexed to, uint256 amount)

INTEGRATION REQUIREMENTS:
-------------------------
1. BOGO Token Contract: Must implement IERC20 interface
2. MultisigTreasury Contract: Required for deployment and admin functions
3. Backend Services: For custom reward distribution
4. Frontend: For user interactions and eligibility checks

USAGE RESTRICTIONS:
-------------------
1. Daily global limit of 500,000 BOGO tokens across all distributions
2. One-time claims enforced for welcome and founder bonuses
3. Cooldown periods enforced where configured (e.g., 30 days for DAO participation)
4. Whitelist requirement for founder bonus claims
5. Referral relationships are permanent (cannot be changed once set)
6. Backend authorization required for custom rewards

DEPLOYMENT NOTES:
-----------------
1. Constructor requires BOGO token address and Treasury address
2. Reward templates are initialized automatically during deployment
3. No additional initialization required post-deployment
4. Treasury address is immutable once set